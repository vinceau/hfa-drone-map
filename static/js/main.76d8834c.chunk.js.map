{"version":3,"sources":["App.module.css","FileInput.module.css","lib/mapCsvToPositions.js","FileInput.js","lib/readFile.js","Map.js","App.js","index.js"],"names":["module","exports","mapStringToFloat","str","parseFloat","substring","length","FileInput","props","React","useState","text","setText","result","setResult","onFileChange","e","a","files","target","console","log","Promise","all","Array","from","map","f","file","resolve","reject","fr","FileReader","onabort","onerror","readAsText","addEventListener","string","this","resultString","strings","join","className","styles","fileInputContainer","htmlFor","type","id","name","multiple","onChange","value","rows","onClick","res","split","line","chunks","lat","long","filter","r","mapCsvToPositions","JSON","stringify","onSubmit","Map","ReactMapboxGl","accessToken","process","MapView","style","containerStyle","height","width","Consumer","data","features","geometry","coordinates","addSource","addLayer","source","paint","panTo","on","lngLat","lng","push","getSource","setData","App","appContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d8834c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__3jRx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileInputContainer\":\"FileInput_fileInputContainer__3K1pc\"};","export const mapCsvToPositions = (text) => {\n  const results = text.split(\"\\n\").map((line) => {\n    console.log(line);\n    const chunks = line.split(\",\");\n    if (chunks.length === 0) {\n      return null;\n    }\n    console.log(\"chunks length: \", chunks.length);\n    const code = chunks[0];\n    if (code !== \"M\" || chunks.length !== 7) {\n      return null;\n    }\n    const id = chunks[1];\n    const lat = mapStringToFloat(chunks[2]);\n    const long = mapStringToFloat(chunks[3]);\n    return { id, lat, long };\n  });\n  return results.filter((r) => r !== null);\n};\n\nconst mapStringToFloat = (str) => {\n  return parseFloat(str.substring(0, str.length - 1));\n};\n","import React from \"react\";\n\nimport styles from \"./FileInput.module.css\";\nimport { mapCsvToPositions } from \"./lib/mapCsvToPositions\";\nimport { readFileAsText } from \"./lib/readFile\";\n\nconst defaultValue = `M,UL997,37.821608S,145.313996E,470668.68,3,3.4\nP,UL997,12.68,26.3,3.4,41.3,0.0`;\n\nexport const FileInput = (props) => {\n  const [text, setText] = React.useState(defaultValue);\n  const [result, setResult] = React.useState(\"\");\n\n  const onClick = () => {\n    const res = mapCsvToPositions(text);\n    console.log(res);\n    setResult(JSON.stringify(res, null, 2));\n\n    // Return the result to parent\n    if (props.onSubmit) {\n      props.onSubmit(res);\n    }\n  };\n\n  const onFileChange = async (e) => {\n    const files = e.target.files;\n    console.log(files);\n    const strings = await Promise.all(Array.from(files).map((f) => readFileAsText(f)));\n    setText(strings.join(\"\\n\"));\n  };\n\n  return (\n    <div className={styles.fileInputContainer}>\n      <label htmlFor=\"fileInput\">Select a CSV file:</label>\n      <input type=\"file\" id=\"fileInput\" name=\"fileInput\" multiple={true} onChange={onFileChange} />\n      <textarea value={text} onChange={(e) => setText(e.target.value)} rows={20} />\n      <button onClick={onClick}>submit</button>\n      <pre>{result}</pre>\n    </div>\n  );\n};\n","export const readFileAsText = (file) => {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsText) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = this.resultString != null ? this.resultString : this.result;\n          resolve(string);\n        },\n        false,\n      );\n      fr.readAsText(file);\n    } else {\n      reject(\"Failed to read file\");\n    }\n  });\n};\n","import \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport React from \"react\";\nimport ReactMapboxGl, { MapContext } from \"react-mapbox-gl\";\n\n// eslint-disable-next-line new-cap\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_KEY,\n});\n\nconst MapView = () => {\n  return (\n    <div>\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <MapContext.Consumer>\n          {(map) => {\n            const data = {\n              type: \"FeatureCollection\",\n              features: [\n                {\n                  type: \"Feature\",\n                  geometry: {\n                    type: \"LineString\",\n                    coordinates: [[-122.019807, 45.632433]],\n                  },\n                },\n              ],\n            };\n\n            map.addSource(\"trace\", { type: \"geojson\", data: data });\n            map.addLayer({\n              id: \"trace\",\n              type: \"line\",\n              source: \"trace\",\n              paint: {\n                \"line-color\": \"yellow\",\n                \"line-opacity\": 0.75,\n                \"line-width\": 5,\n              },\n            });\n            map.panTo(data.features[0].geometry.coordinates[0]);\n\n            map.on(\"click\", async (e) => {\n              const { lng, lat } = e.lngLat;\n              console.log([lng, lat]);\n              data.features[0].geometry.coordinates.push([lng, lat]);\n              map.getSource(\"trace\").setData(data);\n            });\n          }}\n        </MapContext.Consumer>\n      </Map>\n    </div>\n  );\n};\n\nexport { MapView };\n","import React from \"react\";\n\nimport styles from \"./App.module.css\";\nimport { FileInput } from \"./FileInput\";\nimport { MapView } from \"./Map\";\n\nfunction App() {\n  return (\n    <div className={styles.appContainer}>\n      <FileInput />\n      <MapView />\n    </div>\n  );\n}\n\nexport { App };\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}