{"version":3,"sources":["App.module.css","FileInput.module.css","Map.js","lib/mapCsvToPositions.js","FileInput.js","lib/readFile.js","App.js","index.js"],"names":["module","exports","Map","ReactMapboxGl","accessToken","process","MapView","style","containerStyle","height","width","Consumer","map","data","type","features","geometry","coordinates","addSource","addLayer","id","source","paint","panTo","on","e","a","lngLat","lng","lat","console","log","push","getSource","setData","mapStringToFloat","str","parseFloat","substring","length","FileInput","props","React","useState","text","setText","result","setResult","onFileChange","files","target","Promise","all","Array","from","f","file","resolve","reject","fr","FileReader","onabort","onerror","readAsText","addEventListener","string","this","resultString","strings","join","className","styles","fileInputContainer","htmlFor","name","multiple","onChange","value","rows","onClick","res","split","line","chunks","long","filter","r","mapCsvToPositions","JSON","stringify","onSubmit","App","droneLocations","setDroneLocations","appContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,aAAe,4B,mBCAjCD,EAAOC,QAAU,CAAC,mBAAqB,wC,kLCGjCC,G,MAAMC,YAAc,CACxBC,YAAaC,mGAsDAC,EAnDC,WACd,OACE,6BACE,kBAACJ,EAAD,CACEK,MAAM,oCACNC,eAAgB,CACdC,OAAQ,OACRC,MAAO,SAGT,kBAAC,IAAWC,SAAZ,MACG,SAACC,GACA,IAAMC,EAAO,CACXC,KAAM,oBACNC,SAAU,CACR,CACED,KAAM,UACNE,SAAU,CACRF,KAAM,aACNG,YAAa,CAAC,EAAE,WAAY,gBAMpCL,EAAIM,UAAU,QAAS,CAAEJ,KAAM,UAAWD,KAAMA,IAChDD,EAAIO,SAAS,CACXC,GAAI,QACJN,KAAM,OACNO,OAAQ,QACRC,MAAO,CACL,aAAc,SACd,eAAgB,IAChB,aAAc,KAGlBV,EAAIW,MAAMV,EAAKE,SAAS,GAAGC,SAASC,YAAY,IAEhDL,EAAIY,GAAG,QAAP,uCAAgB,WAAOC,GAAP,mBAAAC,EAAA,wDACOD,EAAEE,OAAfC,EADM,EACNA,IAAKC,EADC,EACDA,IACbC,QAAQC,IAAI,CAACH,EAAKC,IAClBhB,EAAKE,SAAS,GAAGC,SAASC,YAAYe,KAAK,CAACJ,EAAKC,IACjDjB,EAAIqB,UAAU,SAASC,QAAQrB,GAJjB,2CAAhB,6D,iBC1BNsB,EAAmB,SAACC,GACxB,OAAOC,WAAWD,EAAIE,UAAU,EAAGF,EAAIG,OAAS,K,iBCbrCC,EAAY,SAACC,GAAW,IAAD,EACVC,IAAMC,SAJd,mFAGkB,mBAC3BC,EAD2B,KACrBC,EADqB,OAENH,IAAMC,SAAS,IAFT,mBAE3BG,EAF2B,KAEnBC,EAFmB,KAe5BC,EAAY,uCAAG,WAAOvB,GAAP,iBAAAC,EAAA,6DACbuB,EAAQxB,EAAEyB,OAAOD,MACvBnB,QAAQC,IAAIkB,GAFO,SAGGE,QAAQC,IAAIC,MAAMC,KAAKL,GAAOrC,KAAI,SAAC2C,GAAD,OC1B7BC,ED0BmDD,ECzBzE,IAAIJ,SAAQ,SAACM,EAASC,GAC3B,IAAMC,EAAK,IAAIC,WACfD,EAAGE,QAAU,kBAAMH,EAAO,6BAC1BC,EAAGG,QAAU,kBAAMJ,EAAO,4BACtBC,EAAGI,YACLJ,EAAGK,iBACD,QACA,WACE,IAAMC,EAA8B,MAArBC,KAAKC,aAAuBD,KAAKC,aAAeD,KAAKpB,OACpEW,EAAQQ,MAEV,GAEFN,EAAGI,WAAWP,IAEdE,EAAO,0BAhBiB,IAACF,MDuBR,OAGbY,EAHa,OAInBvB,EAAQuB,EAAQC,KAAK,OAJF,2CAAH,sDAOlB,OACE,yBAAKC,UAAWC,IAAOC,oBACrB,2BAAOC,QAAQ,aAAf,sBACA,2BAAO3D,KAAK,OAAOM,GAAG,YAAYsD,KAAK,YAAYC,UAAU,EAAMC,SAAU5B,IAC7E,8BAAU6B,MAAOjC,EAAMgC,SAAU,SAACnD,GAAD,OAAOoB,EAAQpB,EAAEyB,OAAO2B,QAAQC,KAAM,KACvE,4BAAQC,QAvBI,WACd,IAAMC,EDbuB,SAACpC,GAiBhC,OAhBgBA,EAAKqC,MAAM,MAAMrE,KAAI,SAACsE,GACpCpD,QAAQC,IAAImD,GACZ,IAAMC,EAASD,EAAKD,MAAM,KAC1B,OAAsB,IAAlBE,EAAO5C,OACF,MAETT,QAAQC,IAAI,kBAAmBoD,EAAO5C,QAEzB,MADA4C,EAAO,IACkB,IAAlBA,EAAO5C,OAClB,KAKF,CAAEnB,GAHE+D,EAAO,GAGLtD,IAFDM,EAAiBgD,EAAO,IAElBC,KADLjD,EAAiBgD,EAAO,SAGxBE,QAAO,SAACC,GAAD,OAAa,OAANA,KCJfC,CAAkB3C,GAC9Bd,QAAQC,IAAIiD,GACZjC,EAAUyC,KAAKC,UAAUT,EAAK,KAAM,IAGhCvC,EAAMiD,UACRjD,EAAMiD,SAASV,KAgBf,UACA,6BAAMlC,KEnBG6C,MAZf,WAAgB,IAAD,EAC+BjD,IAAMC,SAAS,IAD9C,mBACNiD,EADM,KACUC,EADV,KAIb,OACE,yBAAKvB,UAAWC,IAAOuB,cACrB,kBAAC,EAAD,CAAWJ,SAJE,SAACV,GAAD,OAASa,EAAkBb,MAKxC,kBAAC,EAAD,CAAKY,eAAgBA,MCP3BG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d6809e40.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__3jRx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileInputContainer\":\"FileInput_fileInputContainer__3K1pc\"};","import React from \"react\";\nimport ReactMapboxGl, { MapContext } from \"react-mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_KEY,\n});\n\nconst MapView = () => {\n  return (\n    <div>\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <MapContext.Consumer>\n          {(map) => {\n            const data = {\n              type: \"FeatureCollection\",\n              features: [\n                {\n                  type: \"Feature\",\n                  geometry: {\n                    type: \"LineString\",\n                    coordinates: [[-122.019807, 45.632433]],\n                  },\n                },\n              ],\n            };\n\n            map.addSource(\"trace\", { type: \"geojson\", data: data });\n            map.addLayer({\n              id: \"trace\",\n              type: \"line\",\n              source: \"trace\",\n              paint: {\n                \"line-color\": \"yellow\",\n                \"line-opacity\": 0.75,\n                \"line-width\": 5,\n              },\n            });\n            map.panTo(data.features[0].geometry.coordinates[0]);\n\n            map.on(\"click\", async (e) => {\n              const { lng, lat } = e.lngLat;\n              console.log([lng, lat]);\n              data.features[0].geometry.coordinates.push([lng, lat]);\n              map.getSource(\"trace\").setData(data);\n            });\n          }}\n        </MapContext.Consumer>\n      </Map>\n    </div>\n  );\n};\n\nexport default MapView;\n","export const mapCsvToPositions = (text) => {\n  const results = text.split(\"\\n\").map((line) => {\n    console.log(line);\n    const chunks = line.split(\",\");\n    if (chunks.length === 0) {\n      return null;\n    }\n    console.log(\"chunks length: \", chunks.length);\n    const code = chunks[0];\n    if (code !== \"M\" || chunks.length !== 7) {\n      return null;\n    }\n    const id = chunks[1];\n    const lat = mapStringToFloat(chunks[2]);\n    const long = mapStringToFloat(chunks[3]);\n    return { id, lat, long };\n  });\n  return results.filter((r) => r !== null);\n};\n\nconst mapStringToFloat = (str) => {\n  return parseFloat(str.substring(0, str.length - 1));\n};\n","import React from \"react\";\nimport { mapCsvToPositions } from \"./lib/mapCsvToPositions\";\nimport styles from \"./FileInput.module.css\";\nimport { readFileAsText } from \"./lib/readFile\";\n\nconst defaultValue = `M,UL997,37.821608S,145.313996E,470668.68,3,3.4\nP,UL997,12.68,26.3,3.4,41.3,0.0`;\n\nexport const FileInput = (props) => {\n  const [text, setText] = React.useState(defaultValue);\n  const [result, setResult] = React.useState(\"\");\n\n  const onClick = () => {\n    const res = mapCsvToPositions(text);\n    console.log(res);\n    setResult(JSON.stringify(res, null, 2));\n\n    // Return the result to parent\n    if (props.onSubmit) {\n      props.onSubmit(res);\n    }\n  };\n\n  const onFileChange = async (e) => {\n    const files = e.target.files;\n    console.log(files);\n    const strings = await Promise.all(Array.from(files).map((f) => readFileAsText(f)));\n    setText(strings.join(\"\\n\"));\n  };\n\n  return (\n    <div className={styles.fileInputContainer}>\n      <label htmlFor=\"fileInput\">Select a CSV file:</label>\n      <input type=\"file\" id=\"fileInput\" name=\"fileInput\" multiple={true} onChange={onFileChange} />\n      <textarea value={text} onChange={(e) => setText(e.target.value)} rows={20} />\n      <button onClick={onClick}>submit</button>\n      <pre>{result}</pre>\n    </div>\n  );\n};\n","export const readFileAsText = (file) => {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsText) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = this.resultString != null ? this.resultString : this.result;\n          resolve(string);\n        },\n        false,\n      );\n      fr.readAsText(file);\n    } else {\n      reject(\"Failed to read file\");\n    }\n  });\n};\n","import React from \"react\";\nimport Map from \"./Map\";\nimport styles from \"./App.module.css\";\nimport { FileInput } from \"./FileInput\";\n\nfunction App() {\n  const [droneLocations, setDroneLocations] = React.useState([]);\n  const onSubmit = (res) => setDroneLocations(res);\n\n  return (\n    <div className={styles.appContainer}>\n      <FileInput onSubmit={onSubmit} />\n      <Map droneLocations={droneLocations} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}