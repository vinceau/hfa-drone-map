{"version":3,"sources":["App.module.css","components/FileInput.module.css","components/CsvDownloadButton.js","lib/createDownloadableFile.js","components/CsvDownloader.js","lib/mapCsvToPositions.js","components/FileInput.js","lib/readFile.js","components/Map/MapDronePoints.js","components/Map/MapFeatures.js","components/Map/Map.js","App.js","index.js"],"names":["module","exports","CsvDownloadButton","boatId","waypoints","disabled","filename","contentType","onClick","fileContents","data","navigator","msSaveBlob","blob","Blob","type","element","document","createElement","style","display","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","createDownloadableFile","map","point","i","generateCsvEntryString","join","index","lat","toFixed","long","CsvDownloader","React","useState","text","setText","placeholder","value","onChange","e","target","length","isNegativeCoordinate","mapStringToFloat","str","sign","test","parseFloat","substring","FileInput","props","result","setResult","onFileChange","a","files","console","log","Promise","all","Array","from","f","file","resolve","reject","fr","FileReader","onabort","onerror","readAsText","addEventListener","string","this","resultString","strings","className","styles","fileInputContainer","htmlFor","id","name","multiple","rows","res","split","line","chunks","filter","r","mapCsvToPositions","JSON","stringify","onSubmit","POSITION_CIRCLE_PAINT","MapDronePoints","useContext","MapContext","useEffect","popup","mapboxgl","Popup","closeButton","closeOnClick","on","getCanvas","cursor","coordinates","features","geometry","slice","properties","popupLabels","Math","abs","lngLat","lng","key","setLngLat","addTo","title","setHTML","flyTo","center","remove","paint","droneLocations","loc","DroneID","longitude","latitude","MapFeatures","points","useRef","lines","selectedIndex","addPoint","description","tag","refreshMap","getSource","setData","current","findPointFeature","x","y","selectedFeatures","queryRenderedFeatures","layers","setSelectedIndex","getSelectedIndex","addSource","addLayer","source","splice","insertPointAt","push","addPointToEnd","findIndex","el","getIndexOfTag","removePointAt","Map","ReactMapboxGl","accessToken","process","MapView","containerStyle","height","width","App","setDroneLocations","setWaypoints","appContainer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ee0d228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__3jRx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileInputContainer\":\"FileInput_fileInputContainer__2FREY\"};","import React from \"react\";\n\nimport { createDownloadableFile } from \"../lib/createDownloadableFile\";\n\nconst ROUNDING_ACCURACY = 6;\n\nexport const CsvDownloadButton = ({\n  boatId,\n  waypoints,\n  disabled = false,\n  filename = \"data.csv\",\n  contentType = \"data:text/csv;charset=utf-8,\",\n}) => {\n  const onClick = () => {\n    let fileContents = \"boatId,waypointNumber,latitude,longitude\\n\";\n    fileContents += waypoints.map((point, i) => generateCsvEntryString(boatId, i, point)).join(\"\\n\");\n    createDownloadableFile(fileContents, filename, contentType);\n  };\n\n  return (\n    <button disabled={disabled} onClick={onClick}>\n      download\n    </button>\n  );\n};\n\nconst generateCsvEntryString = (boatId, index, data) => {\n  return `${boatId},${index + 1},${data.lat.toFixed(ROUNDING_ACCURACY)},${data.long.toFixed(ROUNDING_ACCURACY)}`;\n};\n","// Taken from: https://medium.com/@szpytfire/create-a-downloadable-file-using-javascript-typescript-c7d8bf798baa\n\nexport const createDownloadableFile = (data, filename, contentType) => {\n  // IE 11\n  if (navigator.msSaveBlob) {\n    // Use IE11's APIs\n    const blob = new Blob([data], {\n      type: contentType,\n    });\n    navigator.msSaveBlob(blob, filename);\n    return;\n  }\n\n  // Other browsers\n  // Create a hidden anchor link\n  const element = document.createElement(\"a\");\n  element.style.display = \"none\";\n\n  // Attach the content to the anchor\n  element.setAttribute(\"href\", contentType + encodeURIComponent(data));\n  element.setAttribute(\"download\", filename);\n  // Append to DOM and simulate click (this will trigger the download)\n  document.body.appendChild(element);\n  element.click();\n  // Cleanup\n  document.body.removeChild(element);\n};\n","import React from \"react\";\nimport { CsvDownloadButton } from \"./CsvDownloadButton\";\n\nexport const CsvDownloader = ({ waypoints }) => {\n  const [text, setText] = React.useState(\"\");\n\n  return (\n    <div>\n      <input placeholder=\"Boat ID\" value={text} onChange={(e) => setText(e.target.value)} />\n      <CsvDownloadButton disabled={!text || waypoints.length === 0} boatId={text} waypoints={waypoints} />\n    </div>\n  );\n};\n","const isNegativeCoordinate = /[SW]$/;\n\nexport const mapCsvToPositions = (text) => {\n  const results = text.split(\"\\n\").map((line) => {\n    console.log(line);\n    const chunks = line.split(\",\");\n    if (chunks.length === 0) {\n      return null;\n    }\n    console.log(\"chunks length: \", chunks.length);\n    const code = chunks[0];\n    if (code !== \"M\" || chunks.length !== 7) {\n      return null;\n    }\n    const id = chunks[1];\n    const lat = mapStringToFloat(chunks[2]);\n    const long = mapStringToFloat(chunks[3]);\n    return { id, lat, long };\n  });\n  return results.filter((r) => r !== null);\n};\n\nconst mapStringToFloat = (str) => {\n  let sign = 1;\n  if (isNegativeCoordinate.test(str)) {\n    sign = -1;\n  }\n  return sign * parseFloat(str.substring(0, str.length - 1));\n};\n","import React from \"react\";\n\nimport { mapCsvToPositions } from \"../lib/mapCsvToPositions\";\nimport { readFileAsText } from \"../lib/readFile\";\nimport styles from \"./FileInput.module.css\";\n\nconst defaultValue = `M,UL997,37.821608S,145.313996E,470668.68,3,3.4\nP,UL997,12.68,26.3,3.4,41.3,0.0`;\n\nexport const FileInput = (props) => {\n  const [text, setText] = React.useState(defaultValue);\n  const [result, setResult] = React.useState(\"\");\n\n  const onClick = () => {\n    const res = mapCsvToPositions(text);\n    console.log(res);\n    setResult(JSON.stringify(res, null, 2));\n\n    // Return the result to parent\n    if (props.onSubmit) {\n      props.onSubmit(res);\n    }\n  };\n\n  const onFileChange = async (e) => {\n    const files = e.target.files;\n    console.log(files);\n    const strings = await Promise.all(Array.from(files).map((f) => readFileAsText(f)));\n    setText(strings.join(\"\\n\"));\n  };\n\n  return (\n    <div className={styles.fileInputContainer}>\n      <label htmlFor=\"fileInput\">Select a CSV file:</label>\n      <input type=\"file\" id=\"fileInput\" name=\"fileInput\" multiple={true} onChange={onFileChange} />\n      <textarea value={text} onChange={(e) => setText(e.target.value)} rows={20} />\n      <button onClick={onClick}>submit</button>\n      <pre>{result}</pre>\n    </div>\n  );\n};\n","export const readFileAsText = (file) => {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsText) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = this.resultString != null ? this.resultString : this.result;\n          resolve(string);\n        },\n        false,\n      );\n      fr.readAsText(file);\n    } else {\n      reject(\"Failed to read file\");\n    }\n  });\n};\n","import mapboxgl from \"mapbox-gl\";\nimport React from \"react\";\nimport { Feature, Layer, MapContext } from \"react-mapbox-gl\";\n\nconst POSITION_CIRCLE_PAINT = {\n  \"circle-stroke-width\": 2,\n  \"circle-radius\": 8,\n  \"circle-blur\": 0.15,\n  \"circle-color\": \"#3770C6\",\n  \"circle-stroke-color\": \"white\",\n};\n\nexport const MapDronePoints = (props) => {\n  const map = React.useContext(MapContext);\n  React.useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    // popup creation for each drone\n    const popup = new mapboxgl.Popup({\n      closeButton: false,\n      closeOnClick: false,\n    });\n\n    map.on(\"mouseenter\", \"position-marker\", (e) => {\n      map.getCanvas().style.cursor = \"pointer\";\n      const coordinates = e.features[0].geometry.coordinates.slice();\n      const properties = e.features[0].properties;\n      var popupLabels = \"\";\n\n      while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n      }\n\n      popup.setLngLat(coordinates).addTo(map);\n\n      for (var key in properties) {\n        var title = key + \": \";\n        if (key === \"DroneID\") {\n          title = \"<strong>\" + properties[key] + \"</strong><br>\";\n          popupLabels += title;\n        } else if (key !== \"id\") {\n          popupLabels += title + properties[key] + \"<br>\";\n          console.log(properties[key]);\n          popup.setHTML(popupLabels);\n        }\n      }\n    });\n\n    map.on(\"click\", \"position-marker\", (e) => {\n      map.flyTo({\n        center: e.features[0].geometry.coordinates,\n      });\n    });\n\n    map.on(\"mouseenter\", \"position-marker\", () => {\n      map.getCanvas().style.cursor = \"pointer\";\n    });\n\n    map.on(\"mouseleave\", \"position-marker\", () => {\n      map.getCanvas().style.cursor = \"\";\n      popup.remove();\n    });\n  }, [map]);\n\n  // Drawing the layers contain the location of each drone.\n  return (\n    <Layer type=\"circle\" id=\"position-marker\" paint={POSITION_CIRCLE_PAINT}>\n      {props.droneLocations.map((loc, index) => (\n        <Feature\n          key={index}\n          coordinates={[loc.long, loc.lat]}\n          properties={{ DroneID: loc.id, longitude: loc.long, latitude: loc.lat }}\n        />\n      ))}\n    </Layer>\n  );\n};\n","import mapboxgl from \"mapbox-gl\";\nimport React, { useRef } from \"react\";\nimport { MapContext } from \"react-mapbox-gl\";\n\nexport const MapFeatures = (props) => {\n  const map = React.useContext(MapContext);\n\n  const points = useRef(null);\n  const lines = useRef(null);\n  const selectedIndex = useRef(null);\n\n  const onChange = (data) => {\n    const res = data.map(([long, lat]) => ({ long, lat }));\n    if (props.onChange) {\n      props.onChange(res);\n    }\n  };\n\n  function addPoint(coordinates) {\n    return {\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates,\n      },\n      properties: {\n        description: \"<p>\" + JSON.stringify(coordinates) + \"</p>\",\n        tag: JSON.stringify(coordinates),\n      },\n    };\n  }\n\n  function init() {\n    lines.current = {\n      type: \"FeatureCollection\",\n      features: [\n        {\n          type: \"Feature\",\n          geometry: {\n            type: \"LineString\",\n            coordinates: [],\n          },\n        },\n      ],\n    };\n\n    points.current = {\n      type: \"FeatureCollection\",\n      features: [],\n    };\n\n    map.addSource(\"lines\", { type: \"geojson\", data: lines.current });\n    map.addSource(\"points\", { type: \"geojson\", data: points.current });\n\n    map.addLayer({\n      id: \"lines\",\n      type: \"line\",\n      source: \"lines\",\n      paint: {\n        \"line-color\": \"yellow\",\n        \"line-opacity\": 0.75,\n        \"line-width\": 5,\n      },\n    });\n\n    map.addLayer({\n      id: \"points\",\n      type: \"circle\",\n      source: \"points\",\n      paint: {\n        \"circle-radius\": 6,\n        \"circle-color\": \"#B42222\",\n      },\n    });\n  }\n\n  function getIndexOfTag(tag) {\n    return points.current.features.findIndex((el) => el.properties.tag === tag);\n  }\n\n  function insertPointAt(index, coordinates) {\n    points.current.features.splice(index, 0, addPoint(coordinates));\n    lines.current.features[0].geometry.coordinates.splice(index, 0, coordinates);\n    refreshMap();\n    onChange(lines.current.features[0].geometry.coordinates);\n  }\n\n  function addPointToEnd(coordinates) {\n    points.current.features.push(addPoint(coordinates));\n    lines.current.features[0].geometry.coordinates.push(coordinates);\n    refreshMap();\n    onChange(lines.current.features[0].geometry.coordinates);\n  }\n\n  function removePointAt(index) {\n    points.current.features.splice(index, 1);\n    lines.current.features[0].geometry.coordinates.splice(index, 1);\n    refreshMap();\n    onChange(lines.current.features[0].geometry.coordinates);\n  }\n\n  function refreshMap() {\n    map.getSource(\"lines\").setData(lines.current);\n    map.getSource(\"points\").setData(points.current);\n  }\n\n  function findPointFeature(e) {\n    const [x, y] = [e.point.x, e.point.y];\n\n    const selectedFeatures = map.queryRenderedFeatures(\n      [\n        [x - 5, y - 5],\n        [x + 5, y + 5],\n      ],\n      {\n        layers: [\"points\"],\n      },\n    );\n\n    if (selectedFeatures.length > 0) {\n      return {\n        coordinates: selectedFeatures[0].geometry.coordinates.slice(),\n        description: selectedFeatures[0].properties.description,\n        tag: selectedFeatures[0].properties.tag,\n      };\n    } else {\n      return {};\n    }\n  }\n\n  function setSelectedIndex(index) {\n    selectedIndex.current = index;\n    // console.log('hi')\n    // if (index === null) return\n    // const marker = new mapboxgl.Marker()\n    //   .setLngLat(points.current.features[index].geometry.coordinates)\n    //   .addTo(map);\n  }\n\n  function getSelectedIndex() {\n    return selectedIndex.current;\n  }\n\n  React.useEffect(() => {\n    if (!map) {\n      return;\n    }\n\n    init();\n\n    map.on(\"click\", (e) => {\n      const { coordinates, description, tag } = findPointFeature(e);\n\n      if (coordinates && description && tag) {\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        new mapboxgl.Popup().setLngLat(coordinates).setHTML(description).addTo(map);\n      } else {\n        const { lng, lat } = e.lngLat;\n\n        if (getSelectedIndex() !== null) {\n          insertPointAt(getSelectedIndex() + 1, [lng, lat]);\n        } else {\n          addPointToEnd([lng, lat]);\n        }\n        setSelectedIndex(null);\n      }\n    }); // click\n\n    map.on(\"contextmenu\", (e) => {\n      const { tag } = findPointFeature(e);\n\n      if (!tag) {\n        return;\n      }\n\n      const index = getIndexOfTag(tag);\n\n      if (getSelectedIndex() !== index) {\n        selectedIndex.current = index;\n      } else {\n        removePointAt(getSelectedIndex());\n        setSelectedIndex(null);\n      }\n    }); // contextmenu\n  }, [map]);\n\n  return null;\n};\n","import \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport React from \"react\";\nimport ReactMapboxGl from \"react-mapbox-gl\";\n\nimport { MapDronePoints } from \"./MapDronePoints\";\nimport { MapFeatures } from \"./MapFeatures\";\n\n// eslint-disable-next-line new-cap\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_KEY,\n});\n\nexport const MapView = ({ droneLocations, onChange }) => {\n  return (\n    <div>\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <MapDronePoints droneLocations={droneLocations} />\n\n        <MapFeatures onChange={onChange} />\n      </Map>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./App.module.css\";\nimport { CsvDownloader } from \"./components/CsvDownloader\";\nimport { FileInput } from \"./components/FileInput\";\nimport { MapView } from \"./components/Map/Map\";\n\nfunction App() {\n  const [droneLocations, setDroneLocations] = React.useState([]);\n  const [waypoints, setWaypoints] = React.useState([]);\n\n  return (\n    <div className={styles.appContainer}>\n      <div>\n        <FileInput onSubmit={setDroneLocations} />\n        <CsvDownloader waypoints={waypoints} />\n      </div>\n      <MapView droneLocations={droneLocations} onChange={setWaypoints} />\n    </div>\n  );\n}\n\nexport { App };\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}