{"version":3,"sources":["App.module.css","FileInput.module.css","lib/mapCsvToPositions.js","FileInput.js","lib/readFile.js","Map.js","App.js","index.js"],"names":["module","exports","mapStringToFloat","str","parseFloat","substring","length","FileInput","props","React","useState","text","setText","result","setResult","onFileChange","e","a","files","target","console","log","Promise","all","Array","from","map","f","file","resolve","reject","fr","FileReader","onabort","onerror","readAsText","addEventListener","string","this","resultString","strings","join","className","styles","fileInputContainer","htmlFor","type","id","name","multiple","onChange","value","rows","onClick","res","split","line","chunks","lat","long","filter","r","mapCsvToPositions","JSON","stringify","onSubmit","Map","ReactMapboxGl","accessToken","process","format","coordinates","geometry","MapView","selected","useRef","style","containerStyle","height","width","Consumer","trace","features","trace2","addSource","data","addLayer","source","paint","panTo","on","bbox","point","x","y","selectedFeatures","queryRenderedFeatures","layers","slice","description","properties","Math","abs","lngLat","lng","mapboxgl","Popup","setLngLat","setHTML","addTo","current","index","findIndex","el","splice","push","getSource","setData","App","appContainer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa7fbe22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__3jRx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fileInputContainer\":\"FileInput_fileInputContainer__3K1pc\"};","export const mapCsvToPositions = (text) => {\n  const results = text.split(\"\\n\").map((line) => {\n    console.log(line);\n    const chunks = line.split(\",\");\n    if (chunks.length === 0) {\n      return null;\n    }\n    console.log(\"chunks length: \", chunks.length);\n    const code = chunks[0];\n    if (code !== \"M\" || chunks.length !== 7) {\n      return null;\n    }\n    const id = chunks[1];\n    const lat = mapStringToFloat(chunks[2]);\n    const long = mapStringToFloat(chunks[3]);\n    return { id, lat, long };\n  });\n  return results.filter((r) => r !== null);\n};\n\nconst mapStringToFloat = (str) => {\n  return parseFloat(str.substring(0, str.length - 1));\n};\n","import React from \"react\";\n\nimport styles from \"./FileInput.module.css\";\nimport { mapCsvToPositions } from \"./lib/mapCsvToPositions\";\nimport { readFileAsText } from \"./lib/readFile\";\n\nconst defaultValue = `M,UL997,37.821608S,145.313996E,470668.68,3,3.4\nP,UL997,12.68,26.3,3.4,41.3,0.0`;\n\nexport const FileInput = (props) => {\n  const [text, setText] = React.useState(defaultValue);\n  const [result, setResult] = React.useState(\"\");\n\n  const onClick = () => {\n    const res = mapCsvToPositions(text);\n    console.log(res);\n    setResult(JSON.stringify(res, null, 2));\n\n    // Return the result to parent\n    if (props.onSubmit) {\n      props.onSubmit(res);\n    }\n  };\n\n  const onFileChange = async (e) => {\n    const files = e.target.files;\n    console.log(files);\n    const strings = await Promise.all(Array.from(files).map((f) => readFileAsText(f)));\n    setText(strings.join(\"\\n\"));\n  };\n\n  return (\n    <div className={styles.fileInputContainer}>\n      <label htmlFor=\"fileInput\">Select a CSV file:</label>\n      <input type=\"file\" id=\"fileInput\" name=\"fileInput\" multiple={true} onChange={onFileChange} />\n      <textarea value={text} onChange={(e) => setText(e.target.value)} rows={20} />\n      <button onClick={onClick}>submit</button>\n      <pre>{result}</pre>\n    </div>\n  );\n};\n","export const readFileAsText = (file) => {\n  return new Promise((resolve, reject) => {\n    const fr = new FileReader();\n    fr.onabort = () => reject(\"file reading was aborted\");\n    fr.onerror = () => reject(\"file reading has failed\");\n    if (fr.readAsText) {\n      fr.addEventListener(\n        \"load\",\n        function () {\n          const string = this.resultString != null ? this.resultString : this.result;\n          resolve(string);\n        },\n        false,\n      );\n      fr.readAsText(file);\n    } else {\n      reject(\"Failed to read file\");\n    }\n  });\n};\n","import React, {useRef} from \"react\";\nimport ReactMapboxGl, { MapContext } from \"react-mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport mapboxgl from 'mapbox-gl';\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_KEY,\n});\n\n\nfunction format(coordinates) {\n  return {\n    type: \"Feature\",\n    geometry: {\n      type: 'Point',\n      coordinates\n    },\n    'properties': {\n      'description': JSON.stringify(coordinates)\n    },\n  }\n}\n\nexport const MapView = () => {\n\n  const selected = useRef(null)\n\n  return (\n    <div>\n      <Map\n        style=\"mapbox://styles/mapbox/streets-v9\"\n        containerStyle={{\n          height: \"100%\",\n          width: \"100%\",\n        }}\n      >\n        <MapContext.Consumer>\n          {(map) => {\n            const trace = {\n              type: \"FeatureCollection\",\n              features: [\n                {\n                  type: \"Feature\",\n                  geometry: {\n                    type: \"LineString\",\n                    coordinates: [[-122.019807, 45.632433]],\n                  },\n                },\n              ],\n            }\n\n            const trace2 = {\n              type: \"FeatureCollection\",\n              features: [\n                {\n                  type: \"Feature\",\n                  'geometry': {\n                    'type': 'Point',\n                    'coordinates': [-122.019807, 45.632433]\n                  },\n                  'properties': {\n                    'description': 'hello'\n                  },\n                },\n              ],\n            }\n\n\n\n            map.addSource(\"trace\", { type: \"geojson\", data: trace });\n            map.addSource(\"trace2\", { type: \"geojson\", data: trace2 });\n\n            map.addLayer({\n              id: \"trace\",\n              type: \"line\",\n              source: \"trace\",\n              paint: {\n                \"line-color\": \"yellow\",\n                \"line-opacity\": 0.75,\n                \"line-width\": 5,\n              },\n            });\n            // map.addLayer({\n            //   id: \"trace2\",\n            //   type: \"line\",\n            //   source: \"trace2\",\n            //   paint: {\n            //     \"line-color\": \"purple\",\n            //     \"line-opacity\": 0.75,\n            //     \"line-width\": 5,\n            //   },\n            // });\n            map.addLayer({\n              'id': 'trace2',\n              'type': 'circle',\n              'source': 'trace2',\n              'paint': {\n                'circle-radius': 6,\n                'circle-color': '#B42222'\n                },\n            });\n            map.panTo(trace.features[0].geometry.coordinates[0]);\n\n            map.on(\"click\", (e) => {\n\n\n              const bbox = [\n                [e.point.x - 5, e.point.y - 5],\n                [e.point.x + 5, e.point.y + 5]\n              ];\n              // Find features intersecting the bounding box.\n              const selectedFeatures = map.queryRenderedFeatures(bbox, {\n                layers: ['trace2']\n              });\n\n              // Copy coordinates array.\n              if (selectedFeatures.length > 0) {\n                const coordinates = selectedFeatures[0].geometry.coordinates.slice();\n                const description = selectedFeatures[0].properties.description;\n\n                console.log(selectedFeatures[0])\n                  \n                // Ensure that if the map is zoomed out such that multiple\n                // copies of the feature are visible, the popup appears\n                // over the copy being pointed to.\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                  coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                }\n                  \n                new mapboxgl.Popup()\n                  .setLngLat(coordinates)\n                  .setHTML(description)\n                  .addTo(map)\n              } else {\n\n  \n                console.log(e)\n                const { lng, lat } = e.lngLat;\n                console.log([lng, lat]);\n\n                if (selected.current) {\n                  console.log('selected', selected.current)\n                  console.log(JSON.stringify(trace2))\n                  const index = trace2.features.findIndex(el => el.properties.description === selected.current)\n                  console.log(index)\n                  trace.features[0].geometry.coordinates.splice(index+1, 0, [lng, lat])\n                  trace2.features.splice(index+1, 0, format([lng, lat]));\n                  selected.current = null\n                } else {\n                  trace.features[0].geometry.coordinates.push([lng, lat]);\n                  trace2.features.push(format([lng, lat]));\n                }\n                \n                map.getSource(\"trace\").setData(trace);\n                map.getSource(\"trace2\").setData(trace2);\n              }\n\n\n\n            });\n\n            map.on('contextmenu', (e) => {\n\n              \n\n              const bbox = [\n                [e.point.x - 5, e.point.y - 5],\n                [e.point.x + 5, e.point.y + 5]\n              ];\n              // Find features intersecting the bounding box.\n              const selectedFeatures = map.queryRenderedFeatures(bbox, {\n                layers: ['trace2']\n              });\n\n              if (selectedFeatures.length === 0) return\n              const coordinates = selectedFeatures[0].geometry.coordinates.slice();\n              const description = selectedFeatures[0].properties.description;\n              \n              console.log(selected.current, '->', description)\n              console.log(trace2)\n              if (selected.current !== description) {\n                selected.current = description\n              } else {\n                // console.log(selectedFeatures[0])\n  \n                // console.log(trace2.features)\n                // console.log(coordinates)\n  \n                const index = trace2.features.findIndex(el => el.properties.description === description)\n                \n                console.log(trace, trace2)\n  \n                trace.features[0].geometry.coordinates.splice(index, 1)\n                console.log(trace2.features.splice(index, 1))\n  \n                console.log(trace, trace2)\n  \n                map.getSource(\"trace\").setData(trace);\n                map.getSource(\"trace2\").setData(trace2);\n                selected.current = null\n              }\n\n\n\n\n            })\n\n\n\n          }}\n        </MapContext.Consumer>\n      </Map>\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport styles from \"./App.module.css\";\nimport { FileInput } from \"./FileInput\";\nimport { MapView } from \"./Map\";\n\nfunction App() {\n  return (\n    <div className={styles.appContainer}>\n      <FileInput />\n      <MapView />\n    </div>\n  );\n}\n\nexport { App };\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}